datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Role {
  id          String       @id @default(cuid())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String?
  description String?
  permissions Permission[]
}

model Document {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String?
  description String?
  file        Json?
  folder      Folder?    @relation(fields: [folderId], references: [id])
  folderId    String?
  auditLogs   AuditLog[]
  comments    Comment[]
}

model AuditLog {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  action     String?
  timestamp  DateTime?
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
  document   Document? @relation(fields: [documentId], references: [id])
  documentId String?
}

model Permission {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String?
  description String?
  role        Role?    @relation(fields: [roleId], references: [id])
  roleId      String?
}

model Folder {
  id           String     @id @default(cuid())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  name         String?
  parentFolder String?
  documents    Document[]
}

model Comment {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  content    String?
  document   Document? @relation(fields: [documentId], references: [id])
  documentId String?
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model User {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  firstName String?
  lastName  String?
  username  String     @unique
  email     String?    @unique
  password  String
  roles     Json
  auditLogs AuditLog[]
  comments  Comment[]
}
